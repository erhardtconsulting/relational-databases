# This file was created automatically with `myst init --gh-pages` ðŸª„ ðŸ’š
# Ensure your GitHub Pages settings for this repository are set to deploy with **GitHub Actions**.

name: Deploy book

on:
  push:
    # Runs on pushes targeting the default branch
    branches: [main]

env:
  # `BASE_URL` determines the website is served from, including CSS & JS assets
  # You may need to change this to `BASE_URL: ''`
  BASE_URL: ""
  EXERCISES_DIR: "exercises/"
  EXERCISES_BUILD_DIR: "docs/_build/html/extras"


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

  # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5
      
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
        with:
          node-version: 22.x

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      
      - name: Build page
        run: |
          source .venv/bin/activate
          cd docs/
          jupyter book build --html
      
      - name: Convert Exercises
        run: |
          find "${EXERCISES_DIR}" -type f -name "*.md" | while read file; do
            dir=$(dirname "$file")
            filename=$(basename "$file" .md)
            target_dir="${EXERCISES_BUILD_DIR}/${dir#${EXERCISES_DIR}/}"
            
            mkdir -p "${target_dir}"
            echo "Processing $file -> ${target_dir}/${filename}.pdf"
            
            podman run --rm -v "$(pwd):/data" docker.io/pandoc/extra \
              --template eisvogel \
              -f markdown \
              -t pdf \
              "/data/${file}" \
              -o "/data/${target_dir}/${filename}.pdf"
          done

      - name: Build extras index page
        run: |
          source .venv/bin/activate
          linuxdir2html --links "${EXERCISES_BUILD_DIR}" "${EXERCISES_BUILD_DIR}/index"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
        with:
          path: './docs/_build/html'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
