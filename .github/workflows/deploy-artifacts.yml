name: Deploy artifacts

on:
  push:
    branches: 
      - main
    paths:
      - 'docs/**'
      - 'exercises/**'
      - '.github/workflows/deploy-artifacts.yml'

env:
  BASE_URL: ""
  EXERCISES_DIR: "exercises/"
  EXERCISES_BUILD_DIR: "docs/_build/html/extras"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5
      
      - name: Install NodeJS 22.x
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4
        with:
          node-version: 22.x
      
      - name: Cache NodeJS environment
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node
      
      - name: Install NodeJS dependencies
        run: |
          npm install --ci

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      
      - name: Build page
        run: |
          source .venv/bin/activate
          cd docs/
          jupyter book build --html
      
      - name: Convert Exercises
        run: |
          find "${EXERCISES_DIR}" -type f -name "*.md" | while read file; do
            dir=$(dirname "$file")
            base_dir=$(basename "$dir")
            filename=$(basename "$file" .md)
            target_dir="${EXERCISES_BUILD_DIR}/Aufgaben/${base_dir}"
            
            mkdir -p "${target_dir}"
            echo "Processing $file -> ${target_dir}/${filename}.pdf"
            
            podman run --rm -v "$(pwd):/data" docker.io/pandoc/extra \
              --template eisvogel \
              -f markdown \
              -t pdf \
              "/data/${file}" \
              -o "/data/${target_dir}/${filename}.pdf"
          done
      
      - name: Convert slides
        run: |
          npm run slides:pdf
          mkdir -p ${EXERCISES_BUILD_DIR}/Praesentationen
          cp -r slides/_build/*.pdf ${EXERCISES_BUILD_DIR}/Praesentationen

      - name: Build extras index page
        run: |
          source .venv/bin/activate
          cd "${EXERCISES_BUILD_DIR}/../"
          linuxdir2html --links ./extras ./extras/index
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
        with:
          path: './docs/_build/html'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
